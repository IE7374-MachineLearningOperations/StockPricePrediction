# steps:
#   # Step 1: Clone the repository
#   - name: 'gcr.io/cloud-builders/git'
#     entrypoint: 'bash'
#     args:
#       - '-c'
#       - |
#         git clone https://github.com/IE7374-MachineLearningOperations/StockPricePrediction.git &&
#         cd StockPricePrediction &&
#         echo "Repository cloned successfully"

#   # Step 2: Upload specific files to GCP Bucket
#   - name: 'gcr.io/cloud-builders/gsutil'
#     args:
#       - '-m'
#       - 'cp'
#       - '-r'
#       - 'StockPricePrediction/*.py'
#       - 'StockPricePrediction/*.ipynb'
#       - 'StockPricePrediction/*.pkl'
#       - 'gs://stock_price_prediction_dataset/'

#   # Step 3: Install dependencies
#   - name: 'gcr.io/cloud-builders/pip'
#     args:
#       - 'install'
#       - '-r'
#       - 'StockPricePrediction/requirements.txt'

# #   # Step 4: Train the model
# #   - name: 'gcr.io/cloud-builders/python'
# #     args:
# #       - 'StockPricePrediction/train.py'

# #   # Step 5: Validate the model
# #   - name: 'gcr.io/cloud-builders/python'
# #     args:
# #       - 'StockPricePrediction/validate.py'

# #   # Step 6: Conditional deployment if validation is successful
# #   - name: 'gcr.io/cloud-builders/bash'
# #     id: 'Check Validation'
# #     args:
# #       - '-c'
# #       - |
# #         ACCURACY=$(python StockPricePrediction/validate.py --get_accuracy) &&
# #         if (( $(echo "$ACCURACY > 0.70" | bc -l) )); then
# #           echo "Model accuracy is sufficient, proceeding with deployment";
# #         else
# #           echo "Model accuracy is insufficient, stopping deployment";
# #           exit 1;
# #         fi

# #   # Step 7: Save the trained model to GCP Bucket
# #   - name: 'gcr.io/cloud-builders/gsutil'
# #     args:
# #       - 'cp'
# #       - 'StockPricePrediction/models/*.h5'
# #       - 'gs://stock_price_prediction_dataset/trained_models/'

# #   # Step 8: Run Unit Tests
# #   - name: 'gcr.io/cloud-builders/python'
# #     args:
# #       - '-m'
# #       - 'unittest'
# #       - 'discover'
# #       - '-s'
# #       - 'StockPricePrediction/tests'

# # artifacts:
# #   objects:
# #     location: 'gs://stock_price_prediction_dataset/artifacts/'
# #     paths:
# #       - 'StockPricePrediction/*.py'
# #       - 'StockPricePrediction/*.ipynb'
# #       - 'StockPricePrediction/*.h5'

# # timeout: '1200s'
